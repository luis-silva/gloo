name: security-scan-scheduled
env:
    SLACK_DEBUG_TESTING: false   # when set to "true", send notifications to #slack-integration-testing.  Otherwise, post to #edge-team-bots
on:
  # allow for version to be manually specified under actions page
  workflow_dispatch: {}
  schedule:
    # Monday 9am EST
    - cron: "0 13 * * 1"
jobs:
  scan-images:
    name: Trivy Scan
    runs-on: "ubuntu-18.04"
    steps:
      - name: Cancel Previous Actions
        uses: styfle/cancel-workflow-action@0.4.1
        with:
          access_token: ${{ github.token }}
      - name: Free disk space
        run: |
          echo "Before clearing disk space:"
          df -h

          # https://github.com/actions/virtual-environments/issues/709
          sudo apt-get clean

          # Clean up pre-installed tools
          # https://github.com/actions/virtual-environments/issues/1918
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf /usr/local/share/boost
          sudo rm -rf $AGENT_TOOLSDIRECTORY

          echo "After clearing disk space:"
          df -h
      - name: Install Trivy (0.19.2)
        run: |
          wget https://github.com/aquasecurity/trivy/releases/download/v0.19.2/trivy_0.19.2_Linux-64bit.deb
          sudo dpkg -i trivy_0.19.2_Linux-64bit.deb
      - name: Set up Go 1.16.3
        uses: actions/setup-go@v2
        with:
          go-version: 1.16.3
        id: go
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
      - name: Setup - gcloud / gsutil
        uses: google-github-actions/setup-gcloud@master
        with:
          service_account_key: ${{ secrets.GLOO_VULN_REPORTER }}
          project_id: solo-public
          export_default_credentials: true
      - name: Run and Push Security Scan Files to Google Cloud Bucket
        env:
          SCAN_DIR: _output/scans
          IMAGE_REPO: quay.io/solo-io
          MIN_SCANNED_VERSION: 'v1.7.0'
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        run: |
          mkdir -p $SCAN_DIR
          make run-security-scan
          make publish-security-scan
      - name: Alert on workflow failure
        if: ${{ failure() }}
        run : |
          curl -X POST\
               -H 'Content-type: application/json'\
               --data '{"text":"Gloo Edge Vulnerability Scan has failed, visit https://github.com/solo-io/gloo/actions/runs/${{github.run_id}} to view logs."}'\
               ${{ env.SLACK_DEBUG_TESTING && secrets.SLACK_INTEGRATION_TESTING_WEBHOOK || secrets.EDGE_TEAM_BOTS_WEBHOOK }}
